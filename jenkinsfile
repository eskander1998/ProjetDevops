pipeline {

        agent any
        stages {
                stage('check out git'){
                    
                steps{
                        echo 'Pulling...';
                        git branch: 'eskander',
                        url : 'https://github.com/eskander1998/ProjetDevops'
                    }
                }
       stage('Testing maven') {
            steps {
                sh """mvn -version"""
                 
            }
        }
       
        stage('MVN CLEAN') {
            steps {
                sh 'mvn clean'
                 
            }
        }
        stage('MVN COMPILE') {
            steps {
                sh 'mvn compile'
                 
            }
        }
        
		stage('SonarQube analysis 1') {
            steps {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=adminadmin'
            }
        }
        
        
 		
                
       stage('NEXUS') {
            steps {
                sh 'mvn deploy -DskipTests'
                  
            }
        }
        
        
           
    
    
   stage('JUnit and Mockito Test'){
            steps{
                script
                {
                    if (isUnix())
                    {
                        sh 'mvn --batch-mode test'
                    }
                    else
                    {
                        bat 'mvn --batch-mode test'
                    }
                }
            }
        
    }
   
        
        stage('Build Docker image Backend') {
            steps {
                sh 'docker build -t eskanderjguirim/projetdevops-backend . '
                 
            }
        }
        stage('Login Dockerhub') {

			steps {
			sh 'docker login -u eskanderjguirim -p docker123'
			}
			}
        stage('Push image Backend to Dockerhub') {
            steps {
                sh 'docker push eskanderjguirim/projetdevops-backend'
                 
            }
        }
        
        
         stage('Docker compose back/sql/front') {
            steps {
                sh 'docker-compose up -d'
                 
                  }
        }
     
   
    
}

post {
        success {
            emailext  body: 'Le pipeline que vous venez de lancer est achevé avec succé', recipientProviders: [buildUser()], subject: 'Build réussi', to: 'eskander.jguirim@esprit.tn'
        }
        failure{
            emailext attachLog: true, body: 'Le pipeline que vous vener de lancez est achevé avec failure', recipientProviders: [buildUser()], subject: 'Build failed', to: 'eskander.jguirim@esprit.tn'
        }
    }
    }